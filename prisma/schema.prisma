// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model User {
//   id        Int      @id @default(autoincrement())
//   email     String   @unique
//   phone     String   @unique
//   name      String
//   password  String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model Vendor {
//   id        Int      @id @default(autoincrement())
//   name      String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

model Product {
  id         Int               @id @default(autoincrement())
  name       String            @db.VarChar(255)
  categories ProductCategory[]
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
}

model Category {
  id        Int               @id @default(autoincrement())
  name      String            @db.VarChar(255)
  parent   Category? @relation("ChildToParent", fields: [parentId], references: [id])
  parentId Int?
  children Category[] @relation("ChildToParent")
  products  ProductCategory[]
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
}

model ProductCategory {
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int // relation scalar field (used in the `@relation` attribute above)
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int // relation scalar field (used in the `@relation` attribute above)

  @@id([productId, categoryId])
}

// model Variation {
//   id        Int      @id @default(autoincrement())
//   name      String   @db.VarChar(255)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }
